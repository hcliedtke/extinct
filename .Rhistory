user_data$records %>%
pivot_longer(-year)
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_")
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param) %>%
mutate(value_lead=lead(value))
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param) %>%
mutate(value_lag=lag(value, default = value[1]))
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]))
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check=value=<value_lag)
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value<=value_lag)
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag)
# check upper and lower bounds
user_data$surveys %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag)
file<-"c_maridadi/Churamiti maridadi.xlsx"
user_data<-read_extinct_excel(file)
# check upper and lower bounds
user_data$surveys %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag)
# check upper and lower bounds
user_data$surveys %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
any()
# check upper and lower bounds
user_data$surveys %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
file<-"c_maridadi/Churamiti maridadi.xlsx"
user_data<-read_extinct_excel(file)
# check upper and lower bounds
user_data$surveys %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
# check upper and lower bounds
user_data$records %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
# check upper and lower bounds
user_data$passive_surveys %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
user_data$passive_surveys
# check upper and lower bounds
user_data$passive_surveys %>%
enframe()
user_data$passive_surveys
user_data$passive_surveys$eps
user_data$passive_surveys$eps %>%
enframe()
lag(user_data$passive_surveys$eps)
lag(user_data$passive_surveys$eps, user_data$passive_surveys$eps[1])
lag(user_data$passive_surveys$eps, default = user_data$passive_surveys$eps[1])
x=user_data$passive_surveys$eps
x >= lag(x, default = x[1])
lapply(user_data$passive_surveys, function(x) all(x >= lag(x, default = x[1])))
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
}
if(is.list(x))
lapply(user_data$passive_surveys, function(x) all(x >= lag(x, default = x[1])))
}
check_parameter_order(user_data$surveys)
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
}
if(is.list(x))
lapply(user_data$passive_surveys, function(x) all(x >= lag(x, default = x[1])))
}
user_data$surveys
is_tibble(user_data$surveys)
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
}
if(is.list(x))
lapply(user_data$passive_surveys, function(x) all(x >= lag(x, default = x[1])))
}
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
}
if(is.list(x)) {
lapply(user_data$passive_surveys, function(x) all(x >= lag(x, default = x[1])))
}
}
check_parameter_order(user_data$surveys)
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
}
if(is.list(x)) {
lapply(x, function(x) all(x >= lag(x, default = x[1])))
}
}
check_parameter_order(user_data$surveys)
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
}
}
check_parameter_order(user_data$surveys)
is.list(user_data$surveys)
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
} else {
lapply(x, function(x) all(x >= lag(x, default = x[1])))
}
}
check_parameter_order(user_data$surveys)
check_parameter_order(user_data$records)
check_parameter_order(user_data$passive_surveys)
check_parameter_order(user_data$passive_surveys)=T
check_parameter_order(user_data$passive_surveys)
check_parameter_order(user_data$passive_surveys)==T
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
} else {
y<-lapply(x, function(x) all(x >= lag(x, default = x[1])))
all(y==T)
}
}
check_parameter_order(user_data$passive_surveys)
oder_check$surveys<-check_parameter_order(user_data$surveys)
order_check<-list()
order_check<-list()
order_check$surveys<-check_parameter_order(user_data$surveys)
oder_check$records<-check_parameter_order(user_data$records)
oder_check$survey<-check_parameter_order(user_data$passive_surveys)
order_check<-list()
order_check$surveys<-check_parameter_order(user_data$surveys)
oder_check$records<-check_parameter_order(user_data$records)
order_check<-list()
order_check$surveys<-check_parameter_order(user_data$surveys)
order_check$records<-check_parameter_order(user_data$records)
order_check$survey<-check_parameter_order(user_data$passive_surveys)
order_check
all(order_check==T)
order_check$test<-F
all(order_check==T)
order_log<-if(!all(order_check==T)) print(paste("the following tables/fields have parameter bounds that are not in ascending order: ", names(order_check)[order_check==T]))
order_log
names(order_check)[order_check==T])
names(order_check)[order_check==T]
order_check
order_check==T
all(order_check==T)
names(order_check)[order_check==T]
c(names(order_check)[order_check==T])
order_log<-if(!all(order_check==T)) print(paste("the following tables/fields have parameter bounds that are not in ascending order: ", c(names(order_check)[order_check==T])))
order_log<-if(!all(order_check==T)) print(paste("the following tables/fields have parameter bounds that are not in ascending order: ", paste0(names(order_check)[order_check==T], collapse=",")))
names(order_check)[order_check==T]
order_log<-if(!all(order_check==T)) print(paste("the following tables/fields have parameter bounds that are not in ascending order: ", paste0(names(order_check)[order_check!=T], collapse=",")))
paste(order_log, na_log)
file<-"c_maridadi/Churamiti maridadi.xlsx"
user_data<-read_extinct_excel(file)
user_data
# check file is .xslx
xlsx_check<-tools::file_ext(file)=="xlsx"
xlsx_log<-if(!xlsx_check) print("Please upload an excel file with an .xlsx extension")
# check file has relevant sheets
tabs<-excel_sheets(path = file)
tabs_check<-all(c("Threats","Records","Surveys") %in% tabs)
tabs_log<-if(!tabs_check) print("Please upload an excel file that contains at least the following sheets: 'Threats','Records','Surveys'")
# check NAs
na_check<-lapply(user_data, function(x) any(is.na(x)))
na_check
na_log<-if(any(na_check==T)) print(paste("the following tables/fields contain missing data (NAs): ", paste0(names(na_check)[na_check==T], collapse=",")))
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
} else {
y<-lapply(x, function(x) all(x >= lag(x, default = x[1])))
all(y==T)
}
}
order_log<-case_when(
check_parameter_order(user_data$surveys) ~ "Upper and lowerSurvey parameters are not in ascending order"
)
order_check<-list()
order_check$surveys<-check_parameter_order(user_data$surveys)
order_check$records<-check_parameter_order(user_data$records)
order_check$survey<-check_parameter_order(user_data$passive_surveys)
order_log<-if(!all(order_check==T)) print(paste("the following tables/fields have parameter bounds that are not in ascending order: ", paste0(names(order_check)[order_check!=T], collapse=",")))
paste(order_log, na_log)
error_list<-list()
error_list<-list()
error_list$na_log<-na_log
error_list$order_log<-order_log
error_list
error_list$xlsx_log<-xlsx_log
error_list
error_list<-list()
error_list$xlsx_log<-xlsx_log
error_list$tabs_log<-tabs_log
error_list$na_log<-na_log
error_list$order_log<-order_log
error_list
file<-"c_maridadi/Churamiti maridadi.xlsx"
user_data<-read_extinct_excel(file)
user_data
# check file is .xslx
xlsx_check<-tools::file_ext(file)=="xlsx"
xlsx_log<-if(!xlsx_check) print("Please upload an excel file with an .xlsx extension")
# check file has relevant sheets
tabs<-excel_sheets(path = file)
tabs_check<-all(c("Threats","Records","Surveys") %in% tabs)
tabs_log<-if(!tabs_check) print("Please upload an excel file that contains at least the following sheets: 'Threats','Records','Surveys'")
# check NAs
na_check<-lapply(user_data, function(x) any(is.na(x)))
na_check
na_log<-if(any(na_check==T)) print(paste("the following tables/fields contain missing data (NAs): ", paste0(names(na_check)[na_check==T], collapse=",")))
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
} else {
y<-lapply(x, function(x) all(x >= lag(x, default = x[1])))
all(y==T)
}
}
order_log<-case_when(
check_parameter_order(user_data$surveys) ~ "Upper and lowerSurvey parameters are not in ascending order"
)
order_check<-list()
order_check$surveys<-check_parameter_order(user_data$surveys)
order_check$records<-check_parameter_order(user_data$records)
order_check$survey<-check_parameter_order(user_data$passive_surveys)
order_log<-if(!all(order_check==T)) print(paste("the following tables/fields have parameter bounds that are not in ascending order: ", paste0(names(order_check)[order_check!=T], collapse=",")))
### output all errors
error_list<-list()
error_list$xlsx_log<-xlsx_log
error_list$tabs_log<-tabs_log
error_list$na_log<-na_log
error_list$order_log<-order_log
error_list
length(error_log)
length(error_list)
# ============================================
# load file check function
source("functions/check_files.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# check first year is a record year
user_data
# check first year is a record year
min(user_data$records$year)
# check first year is a record year
min(user_data$records$year)<min(user_data$surveys$year)
check_files<-function(file, user_data){
# check file is .xslx
xlsx_check<-tools::file_ext(file)=="xlsx"
xlsx_log<-if(!xlsx_check) print("Please upload an excel file with an .xlsx extension")
# check file has relevant sheets
tabs<-excel_sheets(path = file)
tabs_check<-all(c("Threats","Records","Surveys") %in% tabs)
tabs_log<-if(!tabs_check) print("Please upload an excel file that contains at least the following sheets: 'Threats','Records','Surveys'")
# check NAs
na_check<-lapply(user_data, function(x) any(is.na(x)))
na_check
na_log<-if(any(na_check==T)) print(paste("The following tables/fields contain missing data (NAs): ", paste0(names(na_check)[na_check==T], collapse=",")))
# check upper and lower bounds
check_parameter_order<-function(x){
if(is_tibble(x)){
x %>%
pivot_longer(-year) %>%
separate(name, into=c("param","bound"), sep="_") %>%
group_by(param, year) %>%
mutate(value_lag=lag(value, default = value[1]),
check= value>=value_lag) %>%
pull(check) %>%
all()
} else {
y<-lapply(x, function(x) all(x >= lag(x, default = x[1])))
all(y==T)
}
}
order_check<-list()
order_check$surveys<-check_parameter_order(user_data$surveys)
order_check$records<-check_parameter_order(user_data$records)
order_check$survey<-check_parameter_order(user_data$passive_surveys)
order_log<-if(!all(order_check==T)) print(paste("The following tables/fields have lower/upper parameter bounds that are not in ascending order: ", paste0(names(order_check)[order_check!=T], collapse=",")))
# check first year is a record year
year_check<-min(user_data$records$year)<min(user_data$surveys$year)
year_log<-if(!year_check) print("The first year must be a 'Records' year.")
### output all errors
error_list<-list()
error_list$xlsx_log<-xlsx_log
error_list$tabs_log<-tabs_log
error_list$na_log<-na_log
error_list$order_log<-order_log
return(error_list)
}
read_extinct_excel<-function(x){
# where x is the input$file uploaded by the user
# prepare list
dat<-list()
# get species
file <- x
ext <- tools::file_ext(x)
req(file)
validate(need(ext == "xlsx", "Please upload an xlsx file"))
dat$species<-read_excel(file, sheet = "Threats", range = "B5" , col_names = F) %>%
pull(`...1`)
# get survey data
dat$surveys<-read_excel(file, sheet = "Surveys", range = anchored("A14", dim = c(1000, 10)),col_names = TRUE) %>%
as_tibble() %>%
drop_na(year)
# get records data
dat$records<-read_excel(file, sheet = "Records", range = anchored("A9", dim = c(1000, 4),col_names = TRUE)) %>%
as_tibble() %>%
drop_na(year)
# get passive survey data
dat$passive_surveys<-read_excel(file, sheet = "Surveys", range = "B11:J12" , col_names = TRUE) %>%
as_tibble() %>%
pivot_longer(everything(), names_to = "parameter") %>%
separate(parameter, sep="_", into=c("parameter","bound")) %>%
group_by(parameter) %>%
summarise(named_vec = list(value)) %>%
deframe()
# return list as output
return(dat)
}
read_excel("c_maridadi/Churamiti maridadi.xlsx")
test<-read_extinct_excel("c_maridadi/Churamiti maridadi.xlsx")
test
read_excel(test, sheet = "Surveys", range = "B11:J12" , col_names = TRUE) %>%
as_tibble() %>%
pivot_longer(everything(), names_to = "parameter") %>%
separate(parameter, sep="_", into=c("parameter","bound")) %>%
group_by(parameter) %>%
summarise(named_vec = list(value)) %>%
deframe()
file="c_maridadi/Churamiti maridadi.xlsx"
read_excel(file, sheet = "Surveys", range = "B11:J12" , col_names = TRUE) %>%
as_tibble() %>%
pivot_longer(everything(), names_to = "parameter") %>%
separate(parameter, sep="_", into=c("parameter","bound")) %>%
group_by(parameter) %>%
summarise(named_vec = list(value)) %>%
deframe()
dat<-list()
dat$passive_surveys<-read_excel(file, sheet = "Surveys", range = "B11:J12" , col_names = TRUE) %>%
as_tibble() %>%
pivot_longer(everything(), names_to = "parameter") %>%
separate(parameter, sep="_", into=c("parameter","bound")) %>%
group_by(parameter) %>%
summarise(named_vec = list(value)) %>%
deframe()
dat$passive_surveys
dat
runApp()
runApp()
